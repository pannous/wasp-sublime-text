{
    "scope": "source.wasp",
    "completions": [
       {"trigger": "return", "contents": "return $0"},
        {"trigger": "require", "contents": "require('$0"},
        {"trigger": "setTimeout", "contents": "setTimeout($0,1000)"},
        {"trigger": "true", "contents": "true"},
        {"trigger": "false", "contents": "false"},
        {"trigger": "this", "contents": "this."},
        {"trigger": "module", "contents": "module.exports"},
        {"trigger": "continue", "contents": "continue $0"},
        {"trigger": "indexOf", "contents": "indexOf $0"},
        {"trigger": "const", "contents": "const $0"},
        {"trigger": "Date", "contents": "Date.now"},
        {"trigger": "window", "contents": "window"},
        {"trigger": "Promise", "contents": "new Promise((resolve, reject) => {}"},
        {"trigger": "throw", "contents": "throw"},
        {"trigger": "document", "contents": "document"},
        {"trigger": "documentl", "contents": "document.location"},
        {"trigger": "js", "contents": "JSON.stringify"},
        {"trigger": "await", "contents": "await"},
        {"trigger": "fetch", "contents": "fetch"},
        {"trigger": "replace", "contents": "replace"},
        {"trigger": "class", "contents": "class $0{constructor(){}}"},
        {"trigger": "static ", "contents": "static "},
        {"trigger": "constructor", "contents": "constructor"},
        {"trigger": "assert", "contents": "assert()"},
        {"trigger": "fo", "contents": "for(var i of $0){\n}"},
        {"trigger": "foo", "contents": "for(var i of $0){"},
        {"trigger": "forr", "contents": "for(var i of range(0,$0)){"},
        {"trigger": "fori", "contents": "for(var i=0;i < $0; i++){"},
        {"trigger": "localhost", "contents": "localhost"},
        {"trigger": "error", "contents": "console.error"},
        {"trigger": "ce", "contents": "console.error"},
        {"trigger": "match", "contents": "match"},
        {"trigger": "print", "contents": "print"},
        {"trigger": "assign", "contents": "Object.assign($0,)"},
        {"trigger": "join", "contents": "Object.assign($0,)"},
        // {"trigger": "", "contents": ""},
        {"trigger": "w", "contents": "while($0){}"},
        {"trigger": "r", "contents": "return $0"},
        {"trigger": "v", "contents": "var $0"},
        {"trigger": "typeof", "contents": "typeof($0)=='undefined'"},
        {"trigger": "undefined", "contents": "undefined"},
        {"trigger": "l", "contents": "let $0"},
        {"trigger": "async", "contents": "async $0"},
        {"trigger": "asyncc", "contents": "(async _=>{await $0})()"},
        {"trigger": "asyncf", "contents": "async function $1(){$0}"},
        {"trigger": "af", "contents": "async function $1(){$0}"},
        {"trigger": "else", "contents": "else $0"},
        {"trigger": "prompt", "contents": "window.prompt($0)"},
        {"trigger": "confirm", "contents": "window.confirm($0)"},
        {"trigger": "constructor", "contents": "constructor(){}"},
        {"trigger": "function", "contents": "function $0(){\n}"},
        {"trigger": "alert", "contents": "alert($0)"},
        {"trigger": "cl", "contents": "console.log($0)"},
        {"trigger": "for", "contents": "for($0$1 of $2){}"},
        {"trigger": "JSON", "contents": "JSON.stringify($0)"},
        {"trigger": "jsonp", "contents": "JSON.parse($0)"},
        {"trigger": "parsej", "contents": "JSON.parse($0)"},
        {"trigger": "stringify", "contents": "JSON.stringify($0)"},
        {"trigger": "setInterval", "contents": "setInterval(ok=>$0,1000)"},
        {"trigger": "parseFloat", "contents": "parseFloat($0)"},
        {"trigger": "parseInt", "contents": "parseInt($0)"},
        {"trigger": "write", "contents": "fs.writeFileSync($0,$1)"},
        {"trigger": "read", "contents": "fs.readFileSync($0).toString()"},
        {"trigger": "toString", "contents": "toString()"},
        {"trigger": "env", "contents": "process.env."},
        {"trigger": "arg", "contents": "process.argv."},
        {"trigger": "processenv", "contents": "process.env"},
        {"trigger": "fs", "contents": "var fs= require('fs')"},
        {"trigger": "length", "contents": "length"},
        // {"trigger": "", "contents": ""},
        // {"trigger": "", "contents": ""},
        // {"trigger": "", "contents": ""},
        // {"trigger": "", "contents": ""},
        // {"trigger": "", "contents": ""},
        // {"trigger": "re", "contents": "require('$0')"},
        {"trigger": "ag", "contents": "app.get('/', (req, res) => {})"},
      ]
}
